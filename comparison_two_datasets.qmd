---
title: "Comparison of alternative splicing in two data sets"
format: 
  html: 
    toc: true
    toc-depth: 3
    toc-location: right
    toc-fold: true
    number-sections: false
    toc-title: Contents
    smooth-scroll: true
    lightbox: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, results = TRUE, fig.pos = 'h', fig.align = "center", fig.width = 4, fig.height=4)
```

# Introduction

Now we want to compare the alternative splicing found in the two analysed data sets.


# Preparation

## Required packages

```{r}
library(dplyr) # to easily handle data.frames 
library(knitr) # beautiful tables

library(ggplot2) # nice plots
library(ggpubr) # for even more nice plots
library(eulerr) # for venn diagrams
library(ggpointdensity)

```

## Load splicing results

First we load the data.frames from the global analysis of both data sets.

```{r}
# data.frames containing all junctions per LSV
HepG2 <- readRDS("/Users/melinaklostermann/Documents/projects/students/majiq-course/spezi_scripts_website/example_data/SFPQ_HepG2.rds")
K562 <- readRDS("/Users/melinaklostermann/Documents/projects/students/majiq-course/spezi_scripts_website/example_data/SFPQ_K562.rds")

# data.frames containing the highest junction per LSV
HepG2_highest_junction <- readRDS("/Users/melinaklostermann/Documents/projects/students/majiq-course/spezi_scripts_website/example_data/SFPQ_HepG2_highest_junction.rds")
K562_highest_junction <- readRDS("/Users/melinaklostermann/Documents/projects/students/majiq-course/spezi_scripts_website/example_data/SFPQ_K562_highest_junction.rds")

```

## Comparison of the dpsi of the strongest regulated junction

Now we combine both data sets with all junctions per LSV into one data set with double the number of columns. The columns get the ending .HepG2 or .K562 to distingish which values come from which data set.

We then remove junctions that were only detected in one of the two data sets. And again select the highest junction per LSV.

```{r}
combined_lsvs <- full_join(HepG2, K562, by = c("lsv_id", "junction_coord"), suffix = c(".HepG2", ".K562"))
combined_lsvs

# remove junction that are only in one data set
combined_lsvs <- combined_lsvs %>% 
  subset(!is.na(gene_name.HepG2)) %>% 
  subset(!is.na(gene_name.K562))

# select highest lsv
combined_lsvs <- combined_lsvs %>% 
  mutate(max_cond = max(abs(dpsi.HepG2), abs(dpsi.K562))) %>%
  group_by(lsv_id) %>%
  arrange(max_cond, .by_group = T) %>%
  slice(1)


```

We can now use this data.frame to plot the dpsi values of both data sets against each other.

```{r}
# basic plot
ggplot(combined_lsvs, aes(x = dpsi.HepG2, y = dpsi.K562))+
  geom_point()

# plot with lines for 0
# the axis end are determined with coord_catesian
ggplot(combined_lsvs, aes(x = dpsi.HepG2, y = dpsi.K562))+
  geom_point()+
  geom_hline(yintercept = 0)+
  geom_vline(xintercept = 0)+
  coord_cartesian(xlim = c(-1,1), ylim = c(-1,1))+
  theme_bw()

# using a point_density to see were most points are located
ggplot(combined_lsvs, aes(x = dpsi.HepG2, y = dpsi.K562))+
  ggpointdensity::geom_pointdensity()+
  geom_hline(yintercept = 0)+
  geom_vline(xintercept = 0)+
  coord_cartesian(xlim = c(-1,1), ylim = c(-1,1))+
  theme_bw()


# mark dpsis significant in both data sets
combined_lsvs <- combined_lsvs %>% 
  mutate( both_sign = (probability_changing.HepG2 > 0.9) & (probability_changing.K562 > 0.9))

sig_combined_lsvs <- combined_lsvs %>% subset(both_sign == TRUE)

ggplot(combined_lsvs, aes(x = dpsi.HepG2, y = dpsi.K562))+
  geom_point()+
  geom_point(data = sig_combined_lsvs, aes(x = dpsi.HepG2, y = dpsi.K562), color = "blue")+
  geom_hline(yintercept = 0)+
  geom_vline(xintercept = 0)+
  coord_cartesian(xlim = c(-1,1), ylim = c(-1,1))+
  theme_bw()

# plot only dpsis significant in both data sets
ggplot(sig_combined_lsvs, aes(x = dpsi.HepG2, y = dpsi.K562))+
  geom_point()+
  geom_hline(yintercept = 0)+
  geom_vline(xintercept = 0)+
  coord_cartesian(xlim = c(-1,1), ylim = c(-1,1))+
  theme_bw()

```

### Venn diagram of regulated LSVs between the comparisons

Now that we have seen that there is a substantial amount of regulated LSVs in the two comparisons, we want to find out how many of them are shared between the two comparisons. 

We first extract for both data sets the LSV identifiers of the significant LSVs.

```{r }
combined_lsvs_sign_in_one <- combined_lsvs %>%
  subset((probability_changing.HepG2 > 0.9) | (probability_changing.K562 > 0.9))
```

Next, we make a venn diagramm using the eulerr package. For this we first collect all LSV IDs of LSVs that are significant in at least one of the data sets. Then we create a data frame with the information which of the LSVs was significant in which data set. 

We can then use this data frame to caluclate and plot the venn diagramm. In the diagram the area in the circles is proporitional to the number of lsvs in each circle.

```{r venn}
overlaps <- data.frame( "HepG2" = combined_lsvs_sign_in_one$probability_changing.HepG2 > 0.9,
                         "K562" = combined_lsvs_sign_in_one$probability_changing.K562 > 0.9 )
head(overlaps)
              
 
venn <- eulerr::euler(overlaps)
plot(venn, quantities = TRUE, fontface = 1)

```

Here we can see only a small number of LSVs is regulated in both data sets, while the vast majority is only regulated in only one of the two comparisons.

### Shared and opposite regulation between the comparisons

So far, we know that there is a small set of shared significantly regulated LSVs between the two comparison. But what we do not know is whether the LSVs show the same regulation in the two comparisons.


```{r}

sig_combined_lsvs <- sig_combined_lsvs %>%
  mutate(comparison = case_when( (dpsi.HepG2 > 0) & (dpsi.K562 > 0) ~ "both up",
                                 (dpsi.HepG2 < 0) & (dpsi.K562 < 0) ~ "both down",
                                 T ~ "opposite regulation"),
         )

table(sig_combined_lsvs$comparison) %>% kable

```


We can also plot this result in a barchart.

```{r}
gg_df <- table(sig_combined_lsvs$comparison) %>% 
  as.data.frame()

ggplot(gg_df, aes( x = 1, y = Freq, fill=Var1))+
  geom_col() +
  #coord_cartesian(ylim=(c(0,2000))) +
  labs(x="", y="Number of shared significant LSVs") +
  theme_classic()+
  geom_text(aes(x = 1, label=Freq), vjust=2, col = "white")+
  labs(fill = "Direction of regulation \n in the two data sets")
```

The most interesting targets migh be the ones with shared regulation. Lets look at the top 20.

```{r}
sig_combined_lsvs %>%
  subset(comparison != "opposite regulation") %>%
  arrange(desc(max(dpsi.HepG2, dpsi.K562))) %>%
  head(n=20)


```


# Session info

```{r}
sessionInfo()
```